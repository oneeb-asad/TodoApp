// taskSlice.js
import { createSlice } from "@reduxjs/toolkit";

// Define the initial state for the tasks slice
const initialState = {
    tasks: [],
};

// Create a Redux Toolkit slice for tasks
const taskSlice = createSlice({
    name: "tasks",  // Slice name
    initialState,   // Initial state defined above
    reducers: {
        // Reducer for adding a task to the state
        addTask: (state, action) => {
            state.tasks.unshift(action.payload);   // Add the new task to the beginning of the tasks array
        },
        // Reducer for deleting a task from the state
        deleteTask: (state, action) => {
            state.tasks = state.tasks.filter((task) => task.id !== action.payload); // Filter out the task with the specified ID
        },
        // Reducer for marking a task as completed
        completeTask: (state, action) => {
            const todo = state.tasks.find(tasks => tasks.id === action.payload);   // Find the task with the specified ID
            if (todo) {
                if (!todo.completed) {
                    todo.completed = true;   // Mark the task as completed if it's not already
                }
            }
        },
        // Reducer for toggling the "important" flag of a task
        toggleStar: (state, action) => {
            const taskId = action.payload;
            const task = state.tasks.find((task) => task.id === taskId);  // Find the task with the specified ID

            if (task) {
                task.important = !task.important;  // Toggle the "important" flag of the task
            }
        }
    },
});

// Export the action creators generated by the slice
export const { addTask, deleteTask, toggleStar, completeTask } = taskSlice.actions;
export default taskSlice.reducer;
